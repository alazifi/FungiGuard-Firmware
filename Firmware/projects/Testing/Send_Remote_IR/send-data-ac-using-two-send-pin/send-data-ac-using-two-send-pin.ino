const int pin1 = 21;
const int pin2 = 22;

int PIN_IR_AC_1 = 4;
int PIN_IR_AC_2 = 18;



#include <IRremote.h>

#define IR_SEND_PIN 18
IRsend irsend;

int ir_send_pin = 0;

void setup() {
  Serial.begin(115200);
  pinMode(pin1, INPUT_PULLUP);  // button 1
  pinMode(pin2, INPUT_PULLUP);  // button 2

  digitalWrite(pin1, HIGH);  // button 1
  digitalWrite(pin2, HIGH);  // button 1
  // IrSender.setSendPin(21);
}

void loop() {
  int khz = 38;

  if (digitalRead(pin1) == LOW) {
    // IR_SEND_PIN == PIN_IR_AC_1;
    sendIRSignal2(PIN_IR_AC_1);
    Serial.println(IR_SEND_PIN);
  } else if (digitalRead(pin2) == LOW) {
    // IR_SEND_PIN == PIN_IR_AC_2;
    sendIRSignal1(PIN_IR_AC_2);
    Serial.println(IR_SEND_PIN);
  }
  // delay(500);


  // if(digitalRead(pin1) == LOW){
  // unsigned int irSignalP1[] PROGMEM = {8400,4250, 550,550, 500,1650, 500,1650, 500,550, 550,1650, 450,600, 500,1650, 500,550, 550,550, 500,550, 500,1700, 450,1700, 450,600, 500,1650, 500,1650, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,1650, 500,550, 500,600, 500,550, 500,1700, 500,550, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 450,650, 450,600, 450,650, 450,600, 500,600, 450,600, 500,600, 500,550, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,1650, 500,550, 500,600, 500,550, 500,600, 500,1650, 500,550, 500,600, 500}; // AnalysIR Batch Export (IRremote) - RAW
  // irsend.sendRaw_P(irSignalP1, sizeof(irSignalP1) / sizeof(irSignalP1[0]), khz); // Note the approach used to automatically calculate the size of the array.
  // delay(100);
  // }

  // if(digitalRead(pin2) == LOW){
  // unsigned int irSignalP2[] PROGMEM = {8400,4250, 550,550, 500,1700, 450,1700, 450,600, 500,1650, 500,550, 500,1700, 450,600, 500,550, 500,1700, 450,1700, 450,1700, 450,600, 500,1650, 500,1650, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,1650, 500,550, 500,600, 500,550, 500,1700, 450,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,650, 450,600, 500,600, 450,600, 500,600, 500,550, 500,600, 500,550, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,500, 550,1600, 550,550, 500,550, 550,550, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,600, 450,1700, 500,1650, 500,600, 450,1700, 450,600, 500,1650, 500,600, 450,600, 500}; // AnalysIR Batch Export (IRremote) - RAW
  // irsend.sendRaw_P(irSignalP2, sizeof(irSignalP2) / sizeof(irSignalP2[0]), khz); // Note the approach used to automatically calculate the size of the array.
  // delay(100);
  // }

  // if(digitalRead(pin3) == LOW){
  // unsigned int irSignalP3[] PROGMEM = {8500,4200, 550,500, 600,1600, 550,1600, 550,500, 550,1600, 550,500, 600,1600, 550,500, 550,1600, 550,500, 600,1600, 550,1600, 550,500, 550,1600, 550,1600, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 600,450, 600,500, 550,500, 600,500, 600,450, 600,500, 600,500, 550,500, 600,1600, 550,500, 550,500, 600,500, 550,1600, 550,500, 550,550, 550,500, 600,500, 550,500, 550,550, 550,500, 600,500, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,550, 500,550, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,1650, 500,550, 550,550, 500,550, 550,1600, 500,600, 500,550, 550}; // AnalysIR Batch Export (IRremote) - RAW
  // irsend.sendRaw_P(irSignalP3, sizeof(irSignalP3) / sizeof(irSignalP3[0]), khz); // Note the approach used to automatically calculate the size of the array.
  // delay(100);
  // }

  // if(digitalRead(pin4) == LOW){
  // unsigned int irSignalP4[] PROGMEM = {8450,4200, 600,500, 550,1600, 550,1600, 550,500, 600,1600, 550,500, 550,1600, 550,500, 600,1600, 550,500, 550,1600, 550,1600, 550,500, 600,1600, 550,1600, 550,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 600,1600, 550,500, 550,500, 600,500, 550,1600, 550,500, 600,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,1650, 500,1650, 500,550, 550,500, 600,500, 550,500, 550,550, 550,550, 500,550, 550,550, 500,550, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,550, 500,550, 550,500, 550,550, 550,550, 500,550, 500,1650, 500,1700, 450,1700, 450,600, 500,1650, 500,600, 450,600, 500}; // AnalysIR Batch Export (IRremote) - RAW
  // irsend.sendRaw_P(irSignalP4, sizeof(irSignalP4) / sizeof(irSignalP4[0]), khz); // Note the approach used to automatically calculate the size of the array.
  // delay(100);
  // }
}

void sendIRSignal1(int irLedPin) {
  // Data raw IR yang sesuai dengan protokol perangkat penerima IR Anda

  // Set pin LED IR yang aktif
  digitalWrite(irLedPin, HIGH);

  unsigned int irSignalP4[] PROGMEM = { 8450, 4200, 600, 500, 550, 1600, 550, 1600, 550, 500, 600, 1600, 550, 500, 550, 1600, 550, 500, 600, 1600, 550, 500, 550, 1600, 550, 1600, 550, 500, 600, 1600, 550, 1600, 550, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 600, 1600, 550, 500, 550, 500, 600, 500, 550, 1600, 550, 500, 600, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 1650, 500, 1650, 500, 550, 550, 500, 600, 500, 550, 500, 550, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 600, 500, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 500, 550, 550, 550, 550, 500, 550, 550, 500, 550, 550, 550, 550, 500, 550, 500, 1650, 500, 1700, 450, 1700, 450, 600, 500, 1650, 500, 600, 450, 600, 500 };  // AnalysIR Batch Export (IRremote) - RAW
  irsend.sendRaw_P(irSignalP4, sizeof(irSignalP4) / sizeof(irSignalP4[0]), 38);

  // Matikan pin LED IR
  digitalWrite(irLedPin, LOW);

  // delay(1000);  // Tunda 1 detik sebelum mengirim lagi
}

void sendIRSignal2(int irLedPin) {
  // Data raw IR yang sesuai dengan protokol perangkat penerima IR Anda

  // Set pin LED IR yang aktif
  digitalWrite(irLedPin, HIGH);

    unsigned int irSignalP2[] PROGMEM = {8400,4250, 550,550, 500,1700, 450,1700, 450,600, 500,1650, 500,550, 500,1700, 450,600, 500,550, 500,1700, 450,1700, 450,1700, 450,600, 500,1650, 500,1650, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,1650, 500,550, 500,600, 500,550, 500,1700, 450,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,650, 450,600, 500,600, 450,600, 500,600, 500,550, 500,600, 500,550, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,550, 550,500, 550,500, 600,500, 550,500, 550,550, 550,500, 550,550, 550,500, 550,1600, 550,550, 500,550, 550,550, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 500,600, 500,550, 550,550, 500,550, 550,550, 500,550, 550,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,550, 500,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,600, 500,600, 450,600, 450,1700, 500,1650, 500,600, 450,1700, 450,600, 500,1650, 500,600, 450,600, 500}; // AnalysIR Batch Export (IRremote) - RAW
    irsend.sendRaw_P(irSignalP2, sizeof(irSignalP2) / sizeof(irSignalP2[0]), 38); 

  // Matikan pin LED IR
  digitalWrite(irLedPin, LOW);
// 
  delay(1000);  // Tunda 1 detik sebelum mengirim lagi
}